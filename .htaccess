ErrorDocument 404 /error_page.php
ErrorDocument 403 /error_page.php

Options -Indexes

# Настройка кэширования статических файлов, включить в конце разработки
# <IfModule mod_expires.c>
#     ExpiresActive On
#     ExpiresByType image/jpg "access plus 1 year"
#     ExpiresByType image/jpeg "access plus 1 year"
#     ExpiresByType image/png "access plus 1 year"
#     ExpiresByType image/svg+xml "access plus 1 year"
#     ExpiresByType text/css "access plus 1 month"
#     ExpiresByType application/javascript "access plus 1 month"
# </IfModule>

# Запретить доступ к конкретным файлам
<FilesMatch "^(\.htaccess|\.gitattributes)$">
    Order Allow,Deny
    Deny from all
</FilesMatch>

RewriteEngine On
RewriteBase /

# Если URL содержит .php и после него идёт что-то ещё
RewriteCond %{REQUEST_URI} ^(.+\.php)/.*$
RewriteRule ^(.+\.php)/.*$ /$1 [R=301,L]

# Удаляем конечный слеш для не-директорий
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_URI} (.+)/$
RewriteRule ^ %1 [L,R=301]

# Убираем .php из URL (например, uslugi.php → uslugi)
# 1. Редирект с .php на URL без .php (убираем расширение из URL)
RewriteCond %{THE_REQUEST} ^[A-Z]+\s([^.]+)\.php[\s?] [NC]
RewriteRule ^ %1 [R=301,L]

# 2. Внутреннее перенаправление: обрабатываем URL без .php как .php-файлы
RewriteCond %{REQUEST_FILENAME} !-d
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME}.php -f
RewriteRule ^([^/]+)/?$ $1.php [L]

# Обработка 404 ошибок для подкаталогов
RewriteCond %{REQUEST_FILENAME} !-f
RewriteCond %{REQUEST_FILENAME} !-d
RewriteRule ^(.+)/(.+)$ /error_page.php [L]